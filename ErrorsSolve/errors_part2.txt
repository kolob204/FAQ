======================================================================
======================================================================
======================================================================
ОШИБКА
===========
АВТОДЕПЛОЙ ПРИЛОЖЕНИЯ на WilDFLY


--- maven-deploy-plugin:2.7:deploy (default-deploy) @ core ---
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 3.296 s
[INFO] Finished at: 2014-11-26T17:05:00+02:00
[INFO] Final Memory: 13M/244M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:2.7:
deploy (default-deploy) on project core: Deployment failed: repository element w
as not specified in the POM inside distributionManagement element or in -DaltDep
loymentRepository=id::layout::url parameter -> [Help 1]




===========

ЧТО СДЕЛАЛ
===========

<distributionManagement>
    <repository>
      <uniqueVersion>false</uniqueVersion>
      <id>corp1</id>
      <name>Corporate Repository</name>
      <url>scp://repo/maven2</url>
      <layout>default</layout>
    </repository>

</distributionManagement>

======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

The packaging for this project did not assign a file to the build artifact



===========

ЧТО СДЕЛАЛ
===========

run deploy from comand line

mvn war:War deploy:deploy



https://stackoverflow.com/questions/6308162/maven-the-packaging-for-this-project-did-not-assign-a-file-to-the-build-artifac


======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
 Error assembling WAR: webxml attribute is required (or pre-existing WEB-INF/web.




===========

ЧТО СДЕЛАЛ
===========


<plugin>
   <groupId>org.apache.maven.plugins</groupId>
   <artifactId>maven-war-plugin</artifactId>
   <version>3.2.3</version>
   <configuration>
       <webXml>web\WEB-INF\web.xml</webXml>
   </configuration>
</plugin>



======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
ClassNotFoundException: javax.xml.bind.JAXBContext




===========

ЧТО СДЕЛАЛ
===========
<dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>2.3.0.1</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>2.3.1</version>
        </dependency>



======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

javax.servlet.ServletException: Servlet.init() for servlet [Jersey Web Application] threw exception
	org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
java.lang.IllegalArgumentException
	jersey.repackaged.org.objectweb.asm.ClassReader.<init>(ClassReader.java:170)
	jersey.repackaged.org.objectweb.asm.ClassReader.<init>(ClassReader.java:153)
	jersey.repackaged.org.objectweb.asm.ClassReader.<init>(ClassReader.java:424)
	com.sun.jersey.spi.scanning.AnnotationScannerListener.onProcess(AnnotationScannerListener.java:138)
	com.sun.jersey.core.spi.scanning.JarFileScanner.scan(JarFileScanner.java:97)
	com.sun.jersey.spi.scanning.servlet.WebAppResourcesScanner$1.f(WebAppResourcesScanner.java:94)
	javax.servlet.GenericServlet.init(GenericServlet.java:158)
	java.base/java.lang.Thread.run(Thread.java:830)

===========

ЧТО СДЕЛАЛ
===========
поправил файл web.xml

было
    <display-name>CrunchifyRESTJerseyExample</display-name>
    <welcome-file-list>

         <welcome-file>index.jsp</welcome-file>

    </welcome-file-list>

    <servlet>
        <servlet-name>Jersey Web Application</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Jersey Web Application</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>



Добавил
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>main.java.com.viktor.rest</param-value>
        </init-param>


стало
    <display-name>CrunchifyRESTJerseyExample</display-name>
    <welcome-file-list>

         <welcome-file>index.jsp</welcome-file>

    </welcome-file-list>

    <servlet>
        <servlet-name>Jersey Web Application</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>main.java.com.viktor.rest</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Jersey Web Application</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>




ВТОРАЯ возможная причина
You are mixing the jersey1 and jersey2 dependencies here. Remove the following one from your
om.xml

<dependency>
  <groupId>org.glassfish.jersey.bundles</groupId>
  <artifactId>jaxrs-ri</artifactId>
  <version>2.16</version>
</dependency>
<dependency>
  <groupId>org.glassfish.jersey.media</groupId>
  <artifactId>jersey-media-moxy</artifactId>
  <version>2.16</version>
</dependency>
and add below one

<dependency>
  <groupId>com.sun.jersey</groupId>
  <artifactId>jersey-grizzly2</artifactId>
  <version>1.19.1</version>
</dependency>
If you need json support, then add below one:

<dependency>
  <groupId>com.sun.jersey</groupId>
  <artifactId>jersey-json</artifactId>
  <version>1.19.1</version>
</dependency>

If possible think to migrate to jersey2.

При этом 
 <packaging>war</packaging>
не мешает, хотя в некоторых темах стэковерфлоу  говорили что лучше поставить JAR





======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
web service открывает URL вида  httP://localhost/path/path

но не открывает httP://localhost/index.html


===========

ЧТО СДЕЛАЛ
===========
добавил в WEB.XML

    <!-- All html files at any path -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>

    <!-- Specifically index.html at the root -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/index.html</url-pattern>
    </servlet-mapping>



но автоматически не открывается index.html
приходится в строку браузера писать вручную адрес http://localhost:8080/index.html 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
При старте TOMCAT

Error during artifact deployment. See server log for details.



===========

ЧТО СДЕЛАЛ
===========
папка Tomcat пуста
E:\developer\Tomcat\logs

посмотрел в idea - Edit Configuration - Tomcat - вкладка Logs

там есть Tomcat localhost log
находятся они


C:\Users\user\.IntelliJIdea2018.1\system\tomcat !!!!!

======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
exploded: com.intellij.javaee.oss.admin.jmx.JmxAdminException: com.intellij.execution.ExecutionException:  not found for the web module.




===========

ЧТО СДЕЛАЛ
===========

обновил пути артифактов в Project Structure

почему то слетели


======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========


Exception

javax.servlet.ServletException: Servlet execution threw an exception
	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
Root Cause

java.lang.AbstractMethodError: Receiver class com.sun.jersey.api.uri.UriBuilderImpl does not define or inherit an implementation of the resolved method 'abstract javax.ws.rs.core.UriBuilder uri(java.lang.String)' of abstract class javax.ws.rs.core.UriBuilder.
	javax.ws.rs.core.UriBuilder.fromUri(UriBuilder.java:119)
	com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:669)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)


===========

ЧТО СДЕЛАЛ
===========

AbstractMethodError are thrown when an application tries to call an abstract method.

uri is an abstract method in UriBuilder, so you need an implementation of this. This method (with String parameter) is from version 2.0 of JAX-RS specification.

You're trying to use JAX-RS 2.0 with Jersey 1.*. Instead, you need to use Jersey 2.* that implements JAX-RS 2.0 and contains an implementation to uri method.



УДАЛИЛ из POM

 <dependency>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-bundle</artifactId>
            <version>1.19.4</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>1.19.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>1.19.4</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>1.19.4</version>
        </dependency>
  <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>1.19.3</version>
        </dependency>

ДОБАВИЛ



====
и
<dependency>
    <groupId>org.glassfish.jersey.ext</groupId>
    <artifactId>jersey-mvc</artifactId>
    <version>${jerseyVer}</version>
</dependency>

ДЛЯ
import org.glassfish.jersey.server.mvc.Viewable;


и потом, после ошибки - ещё


<dependency>
    <groupId>org.glassfish.jersey.inject</groupId>
    <artifactId>jersey-hk2</artifactId>
    <version>2.28</version>
</dependency>

======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

avax.servlet.ServletException: Servlet.init() for servlet [Jersey] threw exception
	org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	java.base/java.lang.Thread.run(Thread.java:830)
Root Cause

java.lang.IllegalStateException: InjectionManagerFactory not found.
	org.glassfish.jersey.internal.inject.Injections.lambda$lookupInjectionManagerFactory$0(Injections.java:74)
	java.base/java.util.Optional.orElseThrow(Optional.java:401)
	org.glassfish.jersey.internal.inject.Injections.lookupInjectionManagerFactory(Injections.java:74)
	org.glassfish.jersey.internal.inject.Injections.createInjectionManager(Injections.java:69)
	org.glassfish.jersey.server.ApplicationHandler.<init>(ApplicationHandler.java:259)
	org.glassfish.jersey.servlet.WebComponent.<init>(WebComponent.java:311)
	org.glassfish.jersey.servlet.ServletContainer.init(ServletContainer.java:154)
	org.glassfish.jersey.servlet.ServletContainer.init(ServletContainer.java:346)
	javax.servlet.GenericServlet.init(GenericServlet.java:158)
	org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	java.base/java.lang.Thread.run(Thread.java:830)



===========

ЧТО СДЕЛАЛ
===========
ДОБАВИЛ

<dependency>
    <groupId>org.glassfish.jersey.inject</groupId>
    <artifactId>jersey-hk2</artifactId>
    <version>2.29.1</version>
</dependency>

после этого появилась ошибка

java.lang.NoClassDefFoundError: org/glassfish/hk2/api/ServiceLocatorFactory$CreatePolicy
	at deployment.mess_mysql.war//org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.createLocator(AbstractHk2InjectionManager.java:90)
	at deployment.mess_mysql.war//org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.<init>(AbstractHk2InjectionManager.java:62)

ДОБАВИЛ
<dependency>
    <groupId>org.glassfish.jersey.core</groupId>
    <artifactId>jersey-common</artifactId>
    <version>2.29.1</version>
</dependency>

=====
Дальше получил ошибку
java.lang.NoClassDefFoundError: org/glassfish/jersey/internal/l10n/LocalizableMessageFactory$ResourceBundleSupplier


добавил

<version.glassfish.jersey>2.29.1</version.glassfish.jersey>


<dependencyManagement>
  <dependencies>
     <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${version.glassfish.jersey}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
       </dependencies>
</dependencyManagement>

<dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-bean-validation</artifactId>
            <version>${version.glassfish.jersey}</version>
</dependency>

=====

Получил ошибку  (SQL пока не отвалился) :-))))
java.lang.NoClassDefFoundError: org/glassfish/hk2/api/ServiceLocatorFactory$CreatePolicy


ДОБАВИЛ
 <dependency>
            <groupId>org.glassfish.jersey.bundles.repackaged</groupId>
            <artifactId>jersey-guava</artifactId>
            <version>2.25.1</version>
        </dependency>
НЕ ПОМОГЛО!!!!
=====

удалил Гуаву, добавил
 <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.ext.cdi</groupId>
            <artifactId>jersey-cdi1x</artifactId>
            <version>2.29.1</version>
        </dependency>
        <!-- >>>>>>>>>>>>>>>>> -->

        <!-- next step-->
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>osgi-resource-locator</artifactId>
            <version>2.5.0-b42</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-bom</artifactId>
            <version>2.6.1</version>
            <scope>import</scope>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-api</artifactId>
            <version>2.6.1</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.inject</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

ошибки исчезли, но index.html не открывается автоматически

======================================================================
======================================================================
======================================================================

======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
javax.servlet.ServletException: A MultiException has 3 exceptions.  They are:
1. org.glassfish.hk2.api.UnsatisfiedDependencyException: There was no object available for injection at SystemInjecteeImpl(requiredType=EntityManager,parent=CtoFService,qualifiers={},position=-1,optional=false,self=false,unqualified=null,1668320166)
2. java.lang.IllegalArgumentException: While attempting to resolve the dependencies of main.java.com.viktor.rest.CtoFService errors were found
3. java.lang.IllegalStateException: Unable to perform operation: resolve on main.java.com.viktor.rest.CtoFService

	org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:408)
	org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
	org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)
	org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)
	org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
Root Cause

A MultiException has 3 exceptions.  They are:
1. org.glassfish.hk2.api.UnsatisfiedDependencyException: There was no object available for injection at SystemInjecteeImpl(requiredType=EntityManager,parent=CtoFService,qualifiers={},position=-1,optional=false,self=false,unqualified=null,1668320166)
2. java.lang.IllegalArgumentException: While attempting to resolve the dependencies of main.java.com.viktor.rest.CtoFService errors were found
3. java.lang.IllegalStateException: Unable to perform operation: resolve on main.java.com.viktor.rest.CtoFService

	org.jvnet.hk2.internal.Collector.throwIfErrors(Collector.java:65)
	org.jvnet.hk2.internal.ClazzCreator.resolveAllDependencies(ClazzCreator.java:226)
	org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:334)
	org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
	org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
	org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
	org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)
	org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)
	org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)
	org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
	org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
	org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
	org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
	org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
	org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
	org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
	org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
	org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
	org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)
	org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
	org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
	org.glassfish.jersey.internal.Errors.process(Errors.java:292)
	org.glassfish.jersey.internal.Errors.process(Errors.java:274)
	org.glassfish.jersey.internal.Errors.process(Errors.java:244)
	org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
	org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)
	org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
	org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)
	org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
	org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)
	org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)
	org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
Root Cause

org.glassfish.hk2.api.UnsatisfiedDependencyException: There was no object available for injection at SystemInjecteeImpl(requiredType=EntityManager,parent=CtoFService,qualifiers={},position=-1,optional=false,self=false,unqualified=null,1668320166)
	org.jvnet.hk2.internal.ThreeThirtyResolver.resolve(ThreeThirtyResolver.java:51)
	org.jvnet.hk2.internal.ClazzCreator.resolve(ClazzCreator.java:188)
	org.jvnet.hk2.internal.ClazzCreator.resolveAllDependencies(ClazzCreator.java:211)
	org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:334)
	org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
	org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
	org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
	org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)
	org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)
	org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)
	org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
	org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
	org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
	org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
	org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
	org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
	org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
	org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
	org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
	org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)
	org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
	org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
	org.glassfish.jersey.internal.Errors.process(Errors.java:292)
	org.glassfish.jersey.internal.Errors.process(Errors.java:274)
	org.glassfish.jersey.internal.Errors.process(Errors.java:244)
	org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
	org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)
	org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
	org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)
	org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
	org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)
	org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)
	org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
Note The full stack trace of the root cause is available in the server logs.
 



===========

ЧТО СДЕЛАЛ
===========



 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

 MultiException stack 1 of 6
org.glassfish.hk2.api.UnsatisfiedDependencyException: There was no object available for injection at SystemInjecteeImpl(requiredType=Logger,parent=CtoFService,qualifiers={},position=-1,optional=false,self=false,unqualified=null,829020367)
	at org.jvnet.hk2.internal.ThreeThirtyResolver.resolve(ThreeThirtyResolver.java:51)
	at org.jvnet.hk2.internal.ClazzCreator.resolve(ClazzCreator.java:188)
	at org.jvnet.hk2.internal.ClazzCreator.resolveAllDependencies(ClazzCreator.java:211)
	at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:334)
	at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
	at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
	at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)
	at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
	at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
	at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
	at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
	at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
	at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)
	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
MultiException stack 2 of 6
org.glassfish.hk2.api.UnsatisfiedDependencyException: There was no object available for injection at SystemInjecteeImpl(requiredType=CityRepo,parent=CtoFService,qualifiers={},position=-1,optional=false,self=false,unqualified=null,1507519416)
	at org.jvnet.hk2.internal.ThreeThirtyResolver.resolve(ThreeThirtyResolver.java:51)
	at org.jvnet.hk2.internal.ClazzCreator.resolve(ClazzCreator.java:188)
	at org.jvnet.hk2.internal.ClazzCreator.resolveAllDependencies(ClazzCreator.java:211)
	at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:334)
	at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
	at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
	at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)
	at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
	at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
	at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
	at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
	at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
	at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)
	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
MultiException stack 3 of 6
org.glassfish.hk2.api.UnsatisfiedDependencyException: There was no object available for injection at SystemInjecteeImpl(requiredType=CityRegistrator,parent=CtoFService,qualifiers={},position=-1,optional=false,self=false,unqualified=null,1464521488)
	at org.jvnet.hk2.internal.ThreeThirtyResolver.resolve(ThreeThirtyResolver.java:51)
	at org.jvnet.hk2.internal.ClazzCreator.resolve(ClazzCreator.java:188)
	at org.jvnet.hk2.internal.ClazzCreator.resolveAllDependencies(ClazzCreator.java:211)
	at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:334)
	at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
	at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
	at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)
	at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
	at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
	at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
	at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
	at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
	at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)
	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
MultiException stack 4 of 6
org.glassfish.hk2.api.UnsatisfiedDependencyException: There was no object available for injection at SystemInjecteeImpl(requiredType=EntityManager,parent=CtoFService,qualifiers={},position=-1,optional=false,self=false,unqualified=null,1354964866)
	at org.jvnet.hk2.internal.ThreeThirtyResolver.resolve(ThreeThirtyResolver.java:51)
	at org.jvnet.hk2.internal.ClazzCreator.resolve(ClazzCreator.java:188)
	at org.jvnet.hk2.internal.ClazzCreator.resolveAllDependencies(ClazzCreator.java:211)
	at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:334)
	at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
	at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
	at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)
	at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
	at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
	at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
	at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
	at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
	at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)
	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
MultiException stack 5 of 6
java.lang.IllegalArgumentException: While attempting to resolve the dependencies of main.java.com.viktor.rest.CtoFService errors were found
	at org.jvnet.hk2.internal.ClazzCreator.resolveAllDependencies(ClazzCreator.java:224)
	at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:334)
	at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
	at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
	at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)
	at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
	at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
	at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
	at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
	at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
	at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)
	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
MultiException stack 6 of 6
java.lang.IllegalStateException: Unable to perform operation: resolve on main.java.com.viktor.rest.CtoFService
	at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:363)
	at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
	at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
	at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)
	at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)
	at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
	at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
	at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
	at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
	at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
	at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
	at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)
	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)
	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:678)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)



===========

ЧТО СДЕЛАЛ
===========
 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

 NoClassDefFoundError: Failed to link org/glassfish/jersey/client/ClientConfig



===========

ЧТО СДЕЛАЛ
===========
  <dependencyManagement>
            <dependency>  <!-- After which your main <dependencies> section may omit the versions. -->
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${version.glassfish.jersey}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
   </dependencyManagement>



 <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>

        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>

        </dependency>


 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
при запуске TPMCAT EE

 
30-Nov-2019 10:47:28.303 INFO [main] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke Server startup in [3В 599] milliseconds
нояб. 30, 2019 10:47:28 AM org.apache.openejb.client.EventLogger log
INFO: RemoteInitialContextCreated{providerUri=http://localhost:8080/tomee/ejb}
нояб. 30, 2019 10:47:30 AM org.apache.openejb.client.EventLogger log
WARNING: RequestFailed{server=http://localhost:8080/tomee/ejb} JNDI_LOOKUP:/openejb/DeployerBusinessRemote {error=Cannot open input stream to server: }
нояб. 30, 2019 10:47:31 AM org.apache.openejb.client.EventLogger log
 
===========

ЧТО СДЕЛАЛ
===========
 
исправил конфиг

TOMCAT-EE\conf\system.properties

внёс такие строки

tomee.remote.support = true

tomee.serialization.class.blacklist = -

openejb.system.apps = true

openejb.deployer.binaries.use=true
o
penejb.deployer.save-deployments=true

======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
деплой из мавена на вилдфлай

ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy (default-cli) on project messenger: Deployment failed: repository element was not specified in the POM inside distributionManagement element or in -DaltDeploymentRepository=id::layout::url parameter -> [Help 1]
[ERROR] 
 



===========

ЧТО СДЕЛАЛ
===========
POM.XML

<distributionManagement>
    <repository>
        <uniqueVersion>false</uniqueVersion>
        <id>corp1</id>
        <name>Corporate Repository</name>
        <url>file:E:/developer/wildfly/wildfly-18.0.1.Final/standalone/deployments/</url>
        <layout>default</layout>

    </repository>
</distributionManagement>

 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
ошибка подгрузки MySQl драйвера    при  запуске WilldFly

 Failure description: "WFLYJCA0114: Failed to load datasource class: com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"



===========

ЧТО СДЕЛАЛ
===========
предложения в ИНЕТЕ


1.  записать в  standalone.xml просто вот так

<connection-url>jdbc:mysql://localhost:3306/messenger</connection-url>

<driver>mysql</driver>

<drivers>
        <driver name="mysql" module="com.mysql"/>
</drivers>'

в логах старта WildFly ошибок нет
но DataSourse  в Web интерфейсе - показывает, что коннекта нет - когда жмёшь  TEST Conection

=====

2. или вот так
<connection-url>jdbc:mysql://localhost:3306/messenger</connection-url>

<resources>
    <resource-root path="mysql-connector-java-8.0.18.jar"/>
</resources>

=====
3. развернуть mysql в Web интерфесе WildFly
а в standalone.xml прописать

<driver-class>com.mysql.jdbc.Driver</driver-class>
<driver>mysql-connector-java-8.0.18.jar</driver>


на это мне пришёл ответ
 Required services that are not installed:" => ["jboss.jdbc-driver.mysql-connector-java-8_0_18_jar"],

=====

 удалил строки  из файла standalone.xml

 <driver name="mysql" module="com.mysql">
<driver-class>com.mysql.cj.jdbc.Driver</driver-class>
<xa-datasource-class>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</xa-datasource-class>
 </driver>



======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

 
при запуске WilDfly

Error: HTTP management port configuration not found


===========

ЧТО СДЕЛАЛ
===========

была опечатка в файле конфигурации standalone.xml
и файл читался на перекосяк.
видимо затронуло секцию настройки порта :-)
 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
NoClassDefFoundError: org/glassfish/hk2/api/ClassAnalyzer
 

===========

ЧТО СДЕЛАЛ
===========
 добавил

   <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>osgi-resource-locator</artifactId>
            <version>2.5.0-b42</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-bom</artifactId>
            <version>2.6.1</version>
            <scope>import</scope>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-api</artifactId>
            <version>2.6.1</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.inject</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


ошибка сменилась на другую
.....
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'messenger.messengermap' doesn't exist
.....

with name "sub-resource-locators": javax.servlet.ServletException: UT010051: Deployment jaxrs-1.0.war has stopped
....


у меня уже были какие то подобные проблемы, когда якобы не могла найтись таблица
менял в файле Persistence.xml

======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ЗАДАЧА
===========

Как скопировать все библиотеки, которые используются в проекте,
и скопировать их в нужное место?
хотел попробовать скопировать их в WilDFly
тестировал ошибки

===========

ЧТО СДЕЛАЛ
===========
Там, куда настроена папка OUT вашего Artifact

ПРимер
\java projects\jaxrs\target\mess_mysql\WEB-INF\lib
 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========
При развёртывании проекта на WildFly
 
Unable to find a public constructor for provider class org.glassfish.jersey.server.mvc.internal.ViewableMessageBodyWriter


===========

ЧТО СДЕЛАЛ
===========
убрал зависимость

   <!-- <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-mvc</artifactId>
            <version>2.29.1</version>
        </dependency>-->

======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

 
org.jboss.resteasy.spi.UnhandledException: javax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
	at org.hibernate@5.3.13.Final//org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:154)
	at org.hibernate@5.3.13.Final//org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1515)

Caused by: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
	at org.hibernate@5.3.13.Final//org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63)
	at org.hibernate@5.3.13.Final//org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'messenger.user_message' doesn't exist
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)


===========

ЧТО СДЕЛАЛ
===========
 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
Задача - заставить запускаться index.html автоматически
при старте приложения на WildFly
===========

Настроил так (см ниже) index.html стал открываться автоматически
но другие контексты перестали открываться


WEb.XML
   <display-name>REST Service</display-name>


    <servlet>
        <servlet-name>Jersey</servlet-name>
    <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
    <init-param>
        <param-name>jersey.config.server.provider.packages</param-name>
        <param-value>
            com.viktorfrolov.rest
        </param-value>
    </init-param>

    </servlet>
    
    <servlet-mapping>
        <servlet-name>Jersey</servlet-name>
        <url-pattern>/api/*</url-pattern>

    </servlet-mapping>

  
    <!-- Specifically index.html at the root -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/index.html</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
 

у класса   JaxRsActivator 
удалил контекст приложения  @ApplicationPath("/api")

получилось
public class JaxRsActivator extends Application {

}





===========

ЧТО СДЕЛАЛ
===========
 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

 Начал писать distancecalculator по образу предыдущего теста
 при деплое на WildFly вывалилось
 
  {"jboss.deployment.unit.\"distance.war\".WeldStartService" => "Failed to start service
    Caused by: org.jboss.weld.exceptions.DeploymentException: Exception List with 4 exceptions:
Exception 0 :
org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type EntityManager with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private com.webservice.repository.CityRepo.entityManager
  at com.webservice.repository.CityRepo.entityManager(CityRepo.java:0)

	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateInjectionPointForDeploymentProblems(Validator.java:378)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:290)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateGeneralBean(Validator.java:143)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateRIBean(Validator.java:164)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateBean(Validator.java:526)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:64)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:62)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:62)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:55)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)
	at org.jboss.threads@2.3.3.Final//org.jboss.threads.JBossThread.run(JBossThread.java:485)
Exception 1 :
org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type EntityManager with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private com.webservice.registrator.CityRegistrator.entityManager
  at com.webservice.registrator.CityRegistrator.entityManager(CityRegistrator.java:0)

	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateInjectionPointForDeploymentProblems(Validator.java:378)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:290)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateGeneralBean(Validator.java:143)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateRIBean(Validator.java:164)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateBean(Validator.java:526)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:64)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:62)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:62)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:55)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)
	at org.jboss.threads@2.3.3.Final//org.jboss.threads.JBossThread.run(JBossThread.java:485)
Exception 2 :
org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type EntityManager with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private com.webservice.registrator.DistanceRegistrator.entityManager
  at com.webservice.registrator.DistanceRegistrator.entityManager(DistanceRegistrator.java:0)

	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateInjectionPointForDeploymentProblems(Validator.java:378)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:290)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateGeneralBean(Validator.java:143)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateRIBean(Validator.java:164)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateBean(Validator.java:526)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:64)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:62)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:62)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:55)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)
	at org.jboss.threads@2.3.3.Final//org.jboss.threads.JBossThread.run(JBossThread.java:485)
Exception 3 :
org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type EntityManager with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private com.webservice.repository.DistanceRepo.entityManager
  at com.webservice.repository.DistanceRepo.entityManager(DistanceRepo.java:0)

	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateInjectionPointForDeploymentProblems(Validator.java:378)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateInjectionPoint(Validator.java:290)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateGeneralBean(Validator.java:143)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateRIBean(Validator.java:164)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.Validator.validateBean(Validator.java:526)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:64)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.bootstrap.ConcurrentValidator$1.doWork(ConcurrentValidator.java:62)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:62)
	at org.jboss.weld.core@3.1.2.Final//org.jboss.weld.executor.IterativeWorkerTaskFactory$1.call(IterativeWorkerTaskFactory.java:55)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)
	at org.jboss.threads@2.3.3.Final//org.jboss.threads.JBossThread.run(JBossThread.java:485)
"}}



===========

ЧТО СДЕЛАЛ
===========
 
 забыл добавить класс
 
public class Resources {

    @Produces
    @PersistenceContext
    private EntityManager entityManager;

    @Produces
    public Logger produceLog(InjectionPoint injectionPoint) {
        return Logger.getLogger(injectionPoint.getMember().getName());
    }

}
	
надо оазобраться что он делает.
и почему с ним работает.	
 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

 
{"WFLYCTL0080: Failed services" => {"jboss.deployment.unit.\"distance.war\".WeldStartService" => "Failed to start service
    Caused by: org.jboss.weld.exceptions.DeploymentException: WELD-001409: Ambiguous dependencies for type SchemesTreeBuilder with qualifiers @Default
  at injection point [BackedAnnotatedParameter] Parameter 2 of [BackedAnnotatedConstructor] @Inject public liquibase.integration.cdi.SchemesCDIConfigBuilder(BeanManager, SchemesTreeBuilder)
  at liquibase.integration.cdi.SchemesCDIConfigBuilder.<init>(SchemesCDIConfigBuilder.java:0)
  Possible dependencies: 
  - Managed Bean [class liquibase.integration.cdi.SchemesTreeBuilder] with qualifiers [@Any @Default],
  - Managed Bean [class liquibase.integration.cdi.SchemesTreeBuilder] with qualifiers [@Any @Default]
"}}


===========

ЧТО СДЕЛАЛ
===========
 
 разместил файл  db.changelog.xml 
 в проекте по пути
 src/main/resources
 
 и в классе  Liquibase сделал так
 
 
 package com.webservice.util;


import javax.annotation.Resource;
import javax.enterprise.context.Dependent;
import javax.enterprise.inject.Produces;
import javax.enterprise.inject.Vetoed;
import javax.sql.DataSource;

import liquibase.integration.cdi.CDILiquibaseConfig;
import liquibase.integration.cdi.annotations.LiquibaseType;
import liquibase.resource.ClassLoaderResourceAccessor;
import liquibase.resource.ResourceAccessor;

@Dependent
public class LiquibaseStarter {

    @Produces
    @LiquibaseType
    public CDILiquibaseConfig createConfig() {
        CDILiquibaseConfig config = new CDILiquibaseConfig();
        config.setChangeLog("db.changelog.xml");
        return config;
    }

    @Resource(lookup="java:jboss/datasources/messengerMysql")
    private DataSource ds;

    @Produces
    @LiquibaseType
    public DataSource createDataSource() {
        return ds;
    }

    @Produces
    @LiquibaseType
    public ResourceAccessor create() {
        return new ClassLoaderResourceAccessor(getClass().getClassLoader());
    }

}
 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

 ect distancecalculator: Error setting up or running Liquibase: liquibase.exception.DatabaseException: java.sql.SQLException: The server time zone value '?????????? ????? (????)' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support. -> [Help 1]
[ERROR] 

===========

ЧТО СДЕЛАЛ
===========
 
 настроил  my.ini  конфигурацию MySQL
 
 
 [mysqld]
default-time-zone="+04:00"


======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

 
Failed to execute goal org.liquibase:liquibase-maven-plugin:3.8.1:update (default-cli) on project distancecalculator: Execution default-cli of goal org.liquibase:liquibase-maven-plugin:3.8.1:update failed: A required class was missing while executing org.liquibase:liquibase-maven-plugin:3.8.1:update: javax/xml/bind/annotation/XmlElement


===========

ЧТО СДЕЛАЛ
===========
 у меня была добавлена зависимость в POM.XML
  <dependency>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                        <version>2.3.1</version>
  </dependency>
  
НО ЕЁ НАДО БЫЛО ЗАПИХНУТЬ ВНУТРЬ ПЛАГИНА!!!!!!!!!!!!!!!!!!!!!!!!!!  
 
    <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <changeLogFile>${basedir}/liquibase/db.changelog.xml</changeLogFile>
                    <driver>com.mysql.cj.jdbc.Driver</driver>
                    <url>jdbc:mysql://localhost:3306/test-distance-calculator</url>
                    <username>root</username>
                    <password>root</password>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>update</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                        <version>2.3.1</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

  
javax.servlet.ServletException: A MultiException has 1 exceptions.  They are:
1. org.jboss.weld.exceptions.UnproxyableResolutionException: WELD-001480: Bean type class com.webservice.rest.IndexModel is not proxyable because it contains a final method public final org.glassfish.jersey.server.ServerConfig org.glassfish.jersey.server.ResourceConfig.getConfiguration() - <unknown javax.enterprise.inject.spi.Bean instance>.

	at deployment.distance.war//org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:408)
	at deployment.distance.war//org.glassfish.jersey.servlet.ServletContainer.serviceImpl(ServletContainer.java:385)
	at deployment.distance.war//org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:560)
	
Не работает перенаправление на index.html при деплое приложения в WindFly

это случилось после модификации JAVA файла  com.webservice.rest.IndexModel
к такому виду

public class IndexModel extends ResourceConfig {
    public IndexModel() {
        property(MustacheMvcFeature.TEMPLATE_BASE_PATH, "/templates");
        register(MustacheMvcFeature.class);
        packages("com.webservice");
    }

    @GET
    public Response redirectToIndexFile (@Context UriInfo uriDetails) {
        URI getAbsolutePath = uriDetails.getAbsolutePath();
        return Response.seeOther(URI.create(getAbsolutePath+"index.html")).build();
    }


}  // end  of class  IndexModel

===========

ЧТО СДЕЛАЛ
===========
 добавилось расширение класса до ResourceConfig
 и register(MustacheMvcFeature.class)
 хотел поработать с шаблонами Mustache
 
 
======================================================================
======================================================================
======================================================================

======================================================================
======================================================================
======================================================================
ОШИБКА
===========
Если определять переменный в классе, то получаю ошибку

javax.servlet.ServletException: org.jboss.resteasy.spi.LoggableFailure: RESTEASY003880: Unable to find contextual data of type: javax.servlet.http.HttpServletRequest


Если же в методе, то просто ничего не происходит, иногда HTTP страничка задумывается, как будето пытается загрузить нечто большое,
но потом всё прекращается, и мы остаёмся на той же страничке, где и были.
===========

ЧТО СДЕЛАЛ
===========
 
 
 
======================================================================
======================================================================
======================================================================

======================================================================
======================================================================
======================================================================
ОШИБКА
===========

  MultiException stack 1 of 1
org.jboss.weld.exceptions.UnproxyableResolutionException: WELD-001480: Bean type class com.webservice.rest.IndexModel is not proxyable because it contains a final method public final org.glassfish.jersey.server.ServerConfig org.glassfish.jersey.server.ResourceConfig.getConfiguration() - <unknown javax.enterprise.inject.spi.Bean instance>.


===========

ЧТО СДЕЛАЛ
===========
 
 добавил
 в файл beans
 
  xmlns:weld="http://jboss.org/schema/weld/beans"
  
  
   <weld:scan>
        <weld:include name="com.webservice.rest.**"/>
    </weld:scan>
	
а в зависимости
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>3.0.1.Final</version>
        </dependency>
		
		
Но это никуя не помогло, одна ошибка исчезла - появилась другая - проблемы с 	liquibase
следующая ошибка в списке (см. ниже)

поэтому я перестал бороться с таким способом регистрации провайдеров для сервлета
и описал всё в web.xml
оказывается их там можно было перечислить через запятую

        <init-param>
            <param-name>jersey.config.server.provider.classnames</param-name>
            <param-value>
			org.glassfish.jersey.media.multipart.MultiPartFeature, 
			org.glassfish.jersey.server.mvc.jsp.JspMvcFeature
			</param-value>
        </init-param>	
 
======================================================================
======================================================================
======================================================================

======================================================================
======================================================================
======================================================================
ОШИБКА
===========

  he following beans match by type, but none have matching qualifiers:
  - Managed Bean [class liquibase.resource.ClassLoaderResourceAccessor] with qualifiers [@Any @Default],


===========

ЧТО СДЕЛАЛ
===========
 
 
 
======================================================================
======================================================================
======================================================================

======================================================================
======================================================================
======================================================================
ОШИБКА
===========

  теперь при загрузке XML файла появляется ошибка
  
  Unsupported Media Type
  
  хотя до этого (как использовался один провайдер - MultiPartFeature)
  всё загружалось норм


===========

ЧТО СДЕЛАЛ
===========
 добавил в index.html  
в свойства формы
 enctype="multipart/form-data"
 
 
  <form action="/distance/service/addcitiesfromfile" method="post" enctype="multipart/form-data">
        <p>Select a file : <input type="file" name="file" size="45" accept=".xml" /></p>
        <input type="submit" value="Upload XML" />
    </form>
 
 
======================================================================
======================================================================
======================================================================

======================================================================
======================================================================
======================================================================
ОШИБКА
===========

  javax.servlet.ServletException: org.glassfish.jersey.server.ContainerException: javax.xml.bind.UnmarshalException: unexpected element (uri:"", local:"Distances"). Expected elements are <{}distance>,<{}distances>
	at deployment.distance.war//org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:408)
	at deployment.distance.war//org.glassfish.jersey.servlet.ServletContainer.serviceImpl(ServletContainer.java:385)
	at deployment.distance.war//org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:560)


===========

ЧТО СДЕЛАЛ
===========
 
исправил формат файла XML
 
элементы были названы с большой буквы, а они должны были быть с маленькой.
 
======================================================================
======================================================================
======================================================================

======================================================================
======================================================================
======================================================================
ОШИБКА
===========
deploy  на WildFly

  .Final or one of its dependencies could not be resolved: Could not find artifact sun.jdk:jconsole:jar:jdk at specified path E:\developer\jdk/../lib/jconsole.jar 

===========

ЧТО СДЕЛАЛ
===========
 поменял версию плагина с 1.0.2 на более новую
 2.0.1
 
 <version.wildfly.maven.plugin>2.0.1.Final</version.wildfly.maven.plugin>
 
 
======================================================================
======================================================================
======================================================================

======================================================================
======================================================================
======================================================================
ОШИБКА
===========

  начал приводить в порядок spring boot приложение
  и получилось так, что больше не открывается один из заммапленных путей
   @PostMapping("/doTransaction")
    public String doTransaction(@RequestParam String type,
                              @RequestParam String direction,
                              @RequestParam String source,
                              @RequestParam String summ,
                              @RequestParam String currency,
                              @RequestParam String date,
                              Map<String,Object> model) {


   выпадает страница с надписью ERROR , а в логе никаких подробностей.
даже почистил этот метод, оставил только возврат простой вьюшки, даже без передачи параметров.
одна хуйня.

нашёл в логах вот такое
Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
   
===========

ЧТО СДЕЛАЛ
===========
 
 обнаружил, что из за значков валюты это было.
 как только убрал их - всё заработало вновь.
 
     <select name="currency">
        <option value="$">$</option>
        <option title="Рубль" value="?">?</option>
        <option title="Евро" value="€">€</option>
        <option title="Английский фунт" value="?">?</option>
        <option title="японская Йена" value="?">?</option>
        <option title="Китайский Юань" value="?">?</option>
    </select>
	
	
однако потом их вернул и тоже всё работало, так я и не понял - что за хуйня была.	
 
 похоже проблема была немного в другом
 следующий ИНПУТ у меня был такой
 <input disabled  title="Транзакция проводится сегодняшним днём! Любые изменения не учитываются"  type="text" name="date" placeholder="дата транзакции" value={{curtime}}>
 
 из-за опции disabled - похоже не передавался параметр формы из этого инпута. и возникала ошибка.
 
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
ОШИБКА
===========

//   NullPointer Execption - нельзя в одной проверке использовать вместе проверку " !=null "  and  .equal


===========

ЧТО СДЕЛАЛ
===========


======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
======================================================================
======================================================================
======================================================================
ОШИБКА
===========




===========

ЧТО СДЕЛАЛ
===========
