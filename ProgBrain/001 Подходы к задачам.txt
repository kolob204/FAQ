==============================================================
Постановка задачи:
==================
Необходимо сравнить два набора строк,
что оба набора содержат одинаковые строки.

Например сравнить результат какого то решения с Эталоном.

==================
**Подход к решению:
==================


		ArrayList<String> expectedDorrs = new ArrayList<String>(Arrays. asList("B001","B004","B011","B016" ));

    	int i=2; 
    	error_flag=false;
    	while (!error_flag && i<6) {
			if (expectedDorrs.contains($(By.xpath("//*[@id='accounts_list_suspects_1_search']/following::tr["+i+"]/td[3]/span")).getText())) {
			  i++; 
			} else {
				error_flag=true;
			}
			
		}

==================
Не правильные подходы

ArrayList<String> list1 = new ArrayList<String>(Arrays. asList("B001","B004","B011","B016" ));

ArrayList<String> list2 = new ArrayList<String>();
list2.add("B001");
list2.add("B011");
list2.add("B004");
list2.add("B016");
System.out.println(list1.equals(list2));  //FALSE

Не смотря на то, что строки одинаковые и количество их одинаковое,
порядок их в массивах разный, а это для случая сравнения подобых типов массивов - имеет значение.
==================

Черновики
https://stackoverflow.com/questions/3341202/what-is-the-fastest-way-to-compare-two-sets-in-java

import java.util.Set;

 private static final Set<String> expectedDorrs = Stream.of (
    		"B001","B004","B011","B016").collect(Collectors.toSet());
			
 private static final Set<String> existDorrs = Stream.of (
    		"B001","B004","B011","B016").collect(Collectors.toSet());
			
if ( expectedDorrs.contains(existDorrs) ) {
  //true
}			
==================


==============================================================
==============================================================
Постановка задачи:
==================


==================
**Подход к решению:
==================


==============================================================
==============================================================
Постановка задачи:
==================


==================
**Подход к решению:
==================


==============================================================
==============================================================
Постановка задачи:
==================


==================
**Подход к решению:
==================


==============================================================
==============================================================
Постановка задачи:
==================


==================
**Подход к решению:
==================


==============================================================
==============================================================
Постановка задачи:
==================


==================
**Подход к решению:
==================


==============================================================
==============================================================
Постановка задачи:
==================


==================
**Подход к решению:
==================


==============================================================
==============================================================
Постановка задачи:
==================


==================
**Подход к решению:
==================


==============================================================
